## downloadFunctions.vm

## Variables
## $timeout, $sendReceiveTimeout, $bdiiTimeout, $srmTimeout, $failOverEnabled 
## $failOverHost, $failOverPort, $failOverHome

function downloadLFN {

    local LFN=$1
    local LOCAL=${PWD}/`basename ${LFN}`

    info "Removing file ${LOCAL} in case it is already here"
    \rm -f ${LOCAL}
    info "Downloading file ${LFN}..."
    LINE="lcg-cp -v --connect-timeout $timeout --sendreceive-timeout $sendReceiveTimeout --bdii-timeout $bdiiTimeout --srm-timeout $srmTimeout lfn:${LFN} file:${LOCAL}"
    info ${LINE}
    ${LINE} &> lcg-log
    if [ $? = 0 ]
    then
       info "lcg-cp worked fine"
    else
#if( $failOverEnabled )
        local FILENAME=`lcg-lr lfn:${LFN} | grep $failOverHost`
        #set( $generated = '${FILENAME#*generated}' )
        local PFILE=${generated}
        lcg-cp --nobdii --defaultsetype srmv2 -v srm://$failOverHost:$failOverPort/srm/managerv2?SFN=$failOverHome${PFILE} file:`pwd`/`basename ${LFN}`
        if [ $? = 0 ]
        then
            info "lcg-cp from Fail Over server worked fine"
        else
            error "lcg-cp failed"
            error "`cat lcg-log`"
            return 1
        fi
#else
        error "lcg-cp failed"
        error "`cat lcg-log`"
        return 1
#end
    fi
    \rm lcg-log 
}
export -f downloadLFN

function downloadURI {

    local URI=$1
    local URI_LOWER=`echo $1 | awk '{print tolower($0)}'`

    if [[ ${URI_LOWER} == lfn* ]] || [[ $URI_LOWER == /* ]]
    then
        URI=`echo $URI | sed 's/lfn:\/\/.*[^ ]:[0-9]*\///g'`
        URI=`echo $URI | sed 's/lfn://g'`
        checkCacheDownloadAndCacheLFN $URI
        validateDownload "Cannot download LFN file"
    fi

    if [[ ${URI_LOWER} == file://* ]]
    then
        URI=`echo $URI | sed 's/file:\/\///g'`
        cp $URI .
        validateDownload "Cannot copy file"
    fi

    if [[ ${URI_LOWER} == http://* ]]
    then
        curl --insecure -O ${URI}
        validateDownload "Cannot download HTTP file"
    fi
}

function validateDownload() {

    if [ $? != 0 ]
    then
        error "$1"
        error "Exiting with return value 1"
        exit 1
    fi
}